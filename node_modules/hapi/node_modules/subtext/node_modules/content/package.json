{
  "name": "content",
  "description": "HTTP Content-* headers parsing",
  "version": "1.0.2",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/content"
  },
  "main": "lib/index.js",
  "keywords": [
    "HTTP",
    "header",
    "content",
    "content-type",
    "content-disposition"
  ],
  "engines": {
    "node": ">=0.10.32"
  },
  "dependencies": {
    "boom": "2.x.x",
    "hoek": "2.x.x"
  },
  "devDependencies": {
    "lab": "5.x.x",
    "code": "1.x.x"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-tap": "lab -a code -r tap -o tests.tap",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "license": "BSD-3-Clause",
  "readme": "# content\n\nHTTP Content-* headers parsing.\n\n[![NPM Version](https://badge.fury.io/js/content.svg)](http://badge.fury.io/js/content)\n[![Build Status](https://secure.travis-ci.org/hapijs/content.svg)](http://travis-ci.org/hapijs/content)\n[![Dependencies](https://david-dm.org/hapijs/content.svg)](https://david-dm.org/hapijs/content)\n\nLead Maintainer - [Rui Quelhas](https://github.com/ruiquelhas)\n\n## Table of Contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n    - [`type(header)`](#typeheader)\n    - [`disposition(header)`](#dispositionheader)\n\n## Installation\n\nInstall via [NPM](https://www.npmjs.org).\n\n```\n$ npm install content\n```\n\n## Usage\n\n**content** allows to parse HTTP `Content-*` headers, currently based on the rules established in both [RFC 7231 Section 3.1.1.1](https://tools.ietf.org/html/rfc7231#section-3.1.1.1) and [RFC 6266 Section 4.1](http://tools.ietf.org/html/rfc6266#section-4.1).\n\n### `type(header)`\n\nGenerates an object containing the associated mime-type and the boundary (if specified).\n\n```js\nContent.type('application/json; some=property; and=\"another\"');\n// { mime: 'application/json' }\n\nContent.type('application/json; boundary=asdf');\n// { mime: 'application/json', boundary: 'asdf' }\n```\n\nIf the header is invalid (malformed) or missing required data, such as a `multipart/form-data` header missing its `boundary`, it returns an HTTP `Bad Request` error.\n\n### `disposition(header)`\n\nGenerates an object containing the details related to the `Content-Disposition` header for the `form-data` content type with support for `utf8` encoding.\n\n```js\nContent.disposition('form-data; name=\"file\"; filename=file.jpg');\n// { name: 'file', filename: 'file.jpg' }\n\nContent.disposition('form-data; name=\"file\"; filename*=utf-8\\'en\\'with%20space');\n// { name: 'file', filename: 'with space' }\n```\n\nIf the header is invalid (malformed, invalid or missing properties) or is empty/missing, it returns an explanatory error.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hapijs/content/issues"
  },
  "homepage": "https://github.com/hapijs/content",
  "_id": "content@1.0.2",
  "dist": {
    "shasum": "5704b69dc4a1b98e6d6ee2e7c49544bc70851a0f"
  },
  "_from": "content@1.0.2",
  "_resolved": "https://registry.npmjs.org/content/-/content-1.0.2.tgz"
}
