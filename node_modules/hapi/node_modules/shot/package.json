{
  "name": "shot",
  "description": "Injects a fake HTTP request/response into a node HTTP server",
  "version": "1.6.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/shot"
  },
  "main": "lib/index.js",
  "keywords": [
    "utilities",
    "http",
    "debug",
    "test"
  ],
  "engines": {
    "node": ">=0.10.40"
  },
  "dependencies": {
    "hoek": "2.x.x"
  },
  "devDependencies": {
    "lab": "5.x.x",
    "code": "1.x.x"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-cov-html": "lab -a code -r html -o coverage.html -L"
  },
  "license": "BSD-3-Clause",
  "readme": "![shot Logo](https://raw.github.com/hapijs/shot/master/images/shot.png)\n\nInjects a fake HTTP request/response into a node HTTP server for simulating server logic, writing tests, or debugging. Does not use a socket\nconnection so can be run against an inactive server (server not in listen mode).\n\n[![Build Status](https://secure.travis-ci.org/hapijs/shot.png)](http://travis-ci.org/hapijs/shot)\n\nLead Maintainer: [Matt Harrison](https://github.com/mtharrison)\n\n## Example\n\n```javascript\n// Load modules\n\nvar Http = require('http');\nvar Shot = require('shot');\n\n\n// Declare internals\n\nvar internals = {};\n\n\ninternals.main = function () {\n\n    var dispatch = function (req, res) {\n\n        var reply = 'Hello World';\n        res.writeHead(200, { 'Content-Type': 'text/plain', 'Content-Length': reply.length });\n        res.end(reply);\n    };\n\n    var server = Http.createServer(dispatch);\n\n    Shot.inject(dispatch, { method: 'get', url: '/' }, function (res) {\n\n        console.log(res.payload);\n    });\n};\n\n\ninternals.main();\n```\n\nNote how `server.listen` is never called.\n\n## API\n\nSee the [API Reference](API.md)",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hapijs/shot/issues"
  },
  "homepage": "https://github.com/hapijs/shot",
  "_id": "shot@1.6.1",
  "dist": {
    "shasum": "a25795659c938dd4e8cce992a7c91465a8402564"
  },
  "_from": "shot@1.6.1",
  "_resolved": "https://registry.npmjs.org/shot/-/shot-1.6.1.tgz"
}
